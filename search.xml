<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2019感恩有你</title>
    <url>/2020/05/18/Video/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="2019感恩有你"><a href="#2019感恩有你" class="headerlink" title="2019感恩有你"></a><strong>2019感恩有你</strong></h1><iframe height=498 width=510 frameborder="0" src="https://v.qq.com/txp/iframe/player.html?vid=x0969cruk2a" allowFullScreen="true"></iframe>


<a id="more"></a>




<hr>
<p><strong>Markdown 通用音乐/视频插入方法</strong></p>
<p>Markdown 作为轻量级的标记语言，兼容 html 语法，所以可以直接在 Markdown 文档中使用 html 语法</p>
<p><code>&lt;vedio&gt;</code>标签举例：</p>
<pre><code>1. &lt;video width=&quot;480&quot; height=&quot;320&quot; controls&gt;
2. &lt;source src=&quot;movie.mp4&quot;&gt;
3. &lt;/video&gt;</code></pre><p><code>&lt;embed&gt;</code>标签举例：</p>
<pre><code>&lt;embed src=&quot;http://player.youku.com/player.php/Type/Folder/Fid/27690810/Ob/1/sid/XMTY1MTI3NjMyNA==/v.swf&quot; quality=&quot;high&quot; width=&quot;480&quot; height=&quot;400&quot; align=&quot;middle&quot; allowScriptAccess=&quot;always&quot; allowFullScreen=&quot;true&quot; mode=&quot;transparent&quot; type=&quot;application/x-shockwave-flash&quot;&gt;&lt;/embed&gt;</code></pre><p><code>&lt;iframe&gt;</code>标签举例：</p>
<pre><code>&lt;iframe height=498 width=510 src=&quot;http://player.youku.com/embed/XMTY1MTI3NjMyNA==&quot; frameborder=0 allowfullscreen&gt;&lt;/iframe&gt;</code></pre><p><code>javascript</code>标签举例:</p>
<pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;http://www.xiami.com/widget/player-single?uid=32329501&amp;sid=1776238762&amp;mode=js&quot;&gt;&lt;/script&gt;</code></pre><p>除<code>&lt;vedio&gt;</code>标签外，大部分音乐/视频网站都可以直接生成播放器代码，直接粘贴到 Markdown 文档中即可使用。</p>
<p>不过在 https 下，上述的有些标签可能无法正常使用。</p>
<p><strong>通过 Hexo 插件插入音乐/视频</strong></p>
<pre><code>1.hexo-tag-aplayer:https://github.com/grzhan/hexo-tag-aplayer#upstream-issue
2.hexo-tag-dplayer:https://github.com/NextMoe/hexo-tag-dplayer</code></pre><p>安装命令</p>
<pre><code>1.npm install hexo-tag-dplayer --save
2.npm install hexo-tag-aplayer --save</code></pre>]]></content>
      <categories>
        <category>视频</category>
      </categories>
      <tags>
        <tag>中农</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/05/09/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <categories>
        <category>分类名</category>
      </categories>
      <tags>
        <tag>标签1</tag>
        <tag>标签2</tag>
      </tags>
  </entry>
  <entry>
    <title>产权交易系统</title>
    <url>/2020/05/13/%E4%BA%A7%E6%9D%83%E4%BA%A4%E6%98%93/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一、环境变量，jdk安装"><a href="#一、环境变量，jdk安装" class="headerlink" title="*一、环境变量，jdk安装 *"></a>*<em>一、环境变量，jdk安装 *</em></h2><p>1、添加系统环境变量3 个</p>
<pre><code>JAVA_HOME C:\Program Files\Java\jdk1.8.0_31
JRE_HOME C:\Program Files\Java\jre1.8.0_31
classpath  .;%JAVA_HOME%\lib\dat.jar;%JAVA_HOME%\lib\tools.jar</code></pre><a id="more"></a>

<p>2、path的最后面中添加 “;”分隔开</p>
<pre><code>C:\Program Files\Java\jdk1.8.0_31\bin
C:\Program Files\Java\jdk1.8.0_31\jre\bin
C:\Program Files\Java\jre1.8.0_31</code></pre><p>3、验证配置</p>
<p><code>cmd</code> 命令窗口中输入<code>java -version</code> 出现<code>jdk1.8</code>即配置成功 </p>
<h2 id="二、数据库部署"><a href="#二、数据库部署" class="headerlink" title="二、数据库部署"></a><strong>二、数据库部署</strong></h2><p>1、点击 <a href="https://blog.csdn.net/rucia/article/details/81288235" target="_blank" rel="noopener">安装部署</a> 查看数据库MySQL5.7.23解压版安装教程</p>
<p>2、 安装数据库连接工具 <code>Navicat Premium 11.rar</code>解压</p>
<p>  双击 <code>navicat.exe</code>启动 新建连接，点击连接，选择<code>mysql</code>。<br>  a.输入连接名（随便起：如<code>root-127.0.0.1</code>），<br>  b.<code>ip</code>（目标数据库服务器ip或者localhost,因为可能目标服务器对外<code>IP</code>需要做映射，具体请咨询服务器相应网络工程师），<br>  c.端口（<code>3306</code>）<br>  d.账号（<code>root</code>），密码（刚才设置的密码）</p>
<p>3、创建数据库<code>cqjy</code>，导入数据库， 右键数据库名称<code>cqjy</code>，点击运行<code>sql</code>文件， 将“每个运行中运行多重查询”和“<code>autocommit=0</code>”，两个钩去掉–运行</p>
<h2 id="三、应用部署"><a href="#三、应用部署" class="headerlink" title="三、应用部署"></a><strong>三、应用部署</strong></h2><p>1、修改应用配置文件：<code>application.properties</code>：</p>
<p>a:修改第1行启动单口，<code>server.port=10008</code>，与<code>nginx.conf</code>文件服务端口对应<br>b:修改第24行文件保存路径： <code>uploadpath=E:\\cqjy\\cqjyxt_admin\\upload</code>改成本地服务器对应路径。配置上传文件路径：<code>webpath= localhost:1001/upload</code><br>c:修改第38-40行数据库配置： <code>jdbc:mysql://127.0.0.1:3306/cqjy…………</code><br><code>username=root password=123456</code>(刚才设置的密码)</p>
<p>2、<code>nginx</code>部署</p>
<p>   修改<code>conf</code>文件夹下<code>nginx.cof</code>，在每一段<code>server</code>中出现的<code>E:\cqjyxt</code>修改成服务器本次部署包存放路径<code>D:\cqjyxt\cqjyxt_portal</code>;</p>
<p>3、启动部署</p>
<ul>
<li><p>第一种方式：<br>1、启动<code>war</code>包：进入<code>D:\cqjyxt\cqjyxt_api</code>路径终端输入：<code>java -jar znxd-cqjyxt-master.war</code>  (注：<code>java -jar</code> 加对应的文件名称)                                 </p>
<p>2、发布<code>nginx</code>服务：进入<code>E:\cqjyxt\nginx-1.10.3</code> 路径，输入命令<code>start nginx</code>（只输入一次即可，没有提示）</p>
</li>
<li><p>第二种方式：编辑脚本 </p>
<pre><code>@echo off
  echo “正在启动产权交易系统”
  start /min &quot;cqjyxt&quot; java -jar D:\cqjyxt\cqjyxt_api\znxd-cqjyxt-master.war #war包绝对路径
  ping /n 8 127.1&gt;nul
  echo ”已启动产权交易系统“
  d:#修改为nginx存放盘对应d:
  cd D:\cqjyxt\nginx-1.10.3
  taskkill /fi &quot;imagename eq nginx.EXE&quot; /F
  start nginx
  pause</code></pre></li>
</ul>
<p>部署完成，访问系统地址</p>
<p>门户：<a href="http://门户：localhost:1001" title="门户网站">门户网站</a></p>
<p>后台：<code>localhost:1002</code> 用户名：<code>admin</code> 密码：<code>admin2</code></p>
<hr>
<font face="楷体" size = 5 color = red >
**注意事项**

<p>不能删除角色管理中，“管理员权限”这个权限</p>
]]></content>
      <categories>
        <category>三农</category>
      </categories>
      <tags>
        <tag>产权交易</tag>
        <tag>三农服务</tag>
      </tags>
  </entry>
  <entry>
    <title>江湖八大门</title>
    <url>/2020/05/12/%E6%B1%9F%E6%B9%96%E5%85%AB%E5%A4%A7%E9%97%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p><em>过去的江湖术，分为惊、疲、飘、册、风、火、爵、要八门，包括走江湖混饭吃的种种手段。但是真正的江湖八大门可不止这些，而是这人世间一切所为之道――</em></p>
</blockquote>
<p>三山五岳、五湖四海，上至庙堂之上，下至市井之间，皆称江湖。俗话说有人的地方就有江湖，人世间一切行事之术，皆可称江湖术，古有八大门之说。然而自清末民国以来，所谓江湖术已经沦为流浪艺人骗口饭吃的小手段，这是狭义的江湖，至今世人所谈的江湖八大门已经完全是狭义了。</p>
<a id="more"></a>



<ul>
<li><p><strong># 惊门 #</strong><br>是江湖八大门之首，主要是研究吉凶祸福，为人指点迷津。那么如今看相算命的都算惊门中的江湖人。惊门始祖是伏羲与周文王，传说伏羲画八卦而文王演周易，而江湖术士们常拜的还有另外一位祖师爷就是汉代的东方朔，据说东方朔曾经就在长安城中摆摊占卜。如果说惊门也有经典的话，那就是《易经》。江湖八大门以惊门为首不是没有道理，因为它研究的是天道变化。惊门一旦精通，则其余七门江湖术都可触类旁通，推演吉凶祸福世事变化本就是世间道的核心。现代的算命先生恐怕没这个本领，但是看人的眼力活还是基本功，而世间江湖术总而言之就是看人下菜碟。</p>
</li>
<li><p><strong># 疲门 #</strong><br>讲究的是行医济世之道。这里的行医不仅包括江湖游医，也包括坐堂医生，甚至包括古代的巫祝等等，只要是用各种办法给人看病，皆归疲门。疲门中人拜的祖师爷有两位，医圣张仲景与药王孙思邈。但是如今说江湖疲门，大家指的大多都是游方郎中。<br>疲门仅次于惊门位于江湖八大门之二，地位也很重要，因为它研究的是人自身的学问。严格说起来疲门的始祖是黄帝轩辕与炎帝神农，他们也是传说中中华民族的始祖，疲门的经典当然是《黄帝内经》与《神农本草经》。</p>
</li>
<li><p><strong># 飘门 #</strong><br>讲究的是云游求学之道。飘门的祖师爷是孔子孔圣人，这恐怕是很多人想不到的。而时至今日，江湖杂耍卖艺、登台现演的，甚至烟花妓女，都自称飘门中人。</p>
</li>
<li><p><strong># 册门 #</strong><br>讲究的是考证今古之学。册门的祖师爷是司马迁。时至今日江湖术，捣腾真假古董的，卖春宫的，经营字画的，都自称册门中人，甚至还包括盗墓的。</p>
</li>
<li><p><strong># 风门 #</strong><br>研究的是天下地理山川。风门的祖师爷据说是郭璞，那么如今的风水先生、阴阳宅地师都是风门中人了。</p>
</li>
<li><p><strong># 火门 #</strong><br>讲究的是各种养生之术。火门的祖师爷是葛洪葛天师，经典包括《抱朴子》、《参同契》等。那么炼丹术、炼金术、房中术都是火门江湖人的把戏了。</p>
</li>
<li><p><strong># 爵门 #</strong><br>讲究的是为官之道。传说爵门的祖师爷是鬼谷先生，经典是《鬼谷子》与《战国策》，鬼谷先生有两个很有名的弟子苏秦和张仪，传统爵门讲的其实是纵横术。自近代以来，买官卖官的把戏，包括以官方机构的名义诈骗等等，也算是爵门的江湖术。</p>
</li>
<li><p><strong># 要门 #</strong><br>讲究的是落魄之道。这一门的学问深奥，时运不济时该当如何自处又如何渡厄？要门的祖师爷据说是朱元璋，还有一说是柳下拓，其究竟已不可考。近代以来，打莲花落要饭的，吃大户打秋风的，装作僧尼化缘骗人的，甚至下蒙汗药的，都可算要门中人。</p>
</li>
</ul>
<hr>
<p>由此看来，江湖八大门包罗万象，讲的就是人世间做事的手段与道理。而江湖术本身没有什么善恶好坏，就是各种手段，但是江湖中人良莠不齐。<br>而近代的江湖八大门讲的几乎都是江湖把戏了，归于“走江湖”的狭义之中。</p>
<p>古时江湖中人有两种讲究：“里”与“尖”，也称为“术”与“道”。里指的是手段，类似生意经，揣摩人的心理运用何种方法才能达到目的；尖指的是真本领、真正的功夫与追求的大道。<br>比如疲门讲行医，“里”指的就是怎么故弄玄虚能忽悠人，而“尖”指的是真正的医道修为。</p>
<p>在世间行事，这“里”与“尖”二字不可偏废，否则就算你有真本事也未必有人肯买帐，古往今来天底下怀才不遇人多的是。俗话说“尖中里，了不起，里中尖，赛神仙”，讲的就是这个道理。<br>但是近代以来走江湖的术士艺人，更多的是研究坑蒙拐骗的手段，大多沦为下九流了。其实江湖术本身是一门大学问，如果善用此中之道，足以行走天下。</p>
]]></content>
      <categories>
        <category>江湖</category>
      </categories>
      <tags>
        <tag>江湖术</tag>
        <tag>文学</tag>
      </tags>
  </entry>
  <entry>
    <title>黑群晖激活 Active Backup 套件</title>
    <url>/2020/07/03/%E9%BB%91%E7%BE%A4%E6%99%96%E6%BF%80%E6%B4%BB%20Active%20Backup%20%E5%A5%97%E4%BB%B6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>　搭建好黑群晖系统后， 客户端需要使用 <code>Active Backup for Business</code> 套件，第一次使用需要激活，在这里记录一下激活过程，环境 DSM 6.2.1，当然有钱还是要支持正版</p>
<h2 id="登录群晖-WebAPI"><a href="#登录群晖-WebAPI" class="headerlink" title="登录群晖 WebAPI"></a>登录群晖 WebAPI</h2><ol>
<li>确保可以通过 Web 访问你的 DSM</li>
<li>将以下网址中的 <code>URL</code>、<code>PORT</code> 替换为 <code>DSM</code> 的登录地址，<code>USER</code>、<code>PASS</code> 替换为一个 <code>administrators</code> 组里的用户的用户名和密码<br><code>https://URL:PORT/webapi/auth.cgi?</code><br><code>api=SYNO.API.Auth&amp;method=Login&amp;version=1&amp;account=USER&amp;passwd=PASS</code></li>
<li>如果你的密码里包括 <code>+?%</code> 等需要 URL 转码的字符串，先临时修改为一个简单的密码，或在这里进行 URL 转码</li>
<li>打开浏览器访问替换后的网址</li>
<li>如果显示 <code>{&quot;success&quot;:true}</code>，则说明登录成功<a id="more"></a>
<h2 id="激活-Active-Backup-for-Business"><a href="#激活-Active-Backup-for-Business" class="headerlink" title="激活 Active Backup for Business"></a>激活 Active Backup for Business</h2></li>
<li>将以下网址中的 <code>URL</code>、<code>PORT</code> 替换为<code>DSM</code>的登录地址，<code>SERIALNUMBER</code> 替换为 <code>DSM</code> 的序列号<br><code>https://URL:PORT/webapi/entry.cgi</code><br><code>api=SYNO.ActiveBackup.Activation&amp;method=set&amp;version=1&amp;activated=true&amp;serial_number=&quot;SERIALNUMBER&quot;</code></li>
<li>打开浏览器访问替换后的网址</li>
<li>如果显示<code>{&quot;data&quot;:{&quot;activated&quot;:true},&quot;success&quot;:true}</code>，则说明激活成功</li>
<li>验证网址，同样替换 URL、PORT 后，打开浏览器访问：<br><code>https://URL:PORT/webapi/entry.cgi?api=SYNO.ActiveBackup.Activation&amp;method=get&amp;version=1</code></li>
</ol>
<h2 id="激活-Active-Backup-for-G-Suite"><a href="#激活-Active-Backup-for-G-Suite" class="headerlink" title="激活 Active Backup for G Suite"></a>激活 Active Backup for G Suite</h2><ul>
<li>激活网址：<br><code>https://URL:PORT/webapi/entry.cgi?``api=SYNO.ActiveBackupGSuite&amp;method=set_activation&amp;version=1&amp;serial_number=&quot;SERIALNUMBER&quot;</code></li>
<li>验证网址：<br><code>https://URL:PORT/webapi/entry.cgi?api=SYNO.ActiveBackupGSuite&amp;method=get_activation&amp;version=1</code></li>
</ul>
<h2 id="激活-Active-Backup-for-Office-365"><a href="#激活-Active-Backup-for-Office-365" class="headerlink" title="激活 Active Backup for Office 365"></a>激活 Active Backup for Office 365</h2><ul>
<li>激活网址：</li>
</ul>
<p><code>https://URL:PORT/webapi/entry.cgi?api=SYNO.ActiveBackupOffice365&amp;method=set_activation&amp;version=1&amp;serial_number=&quot;SERIALNUMBER&quot;</code></p>
<ul>
<li>验证网址：<br><code>https://URL:PORT/webapi/entry.cgi?api=SYNO.ActiveBackupOffice365&amp;method=get_activation&amp;version=1</code></li>
</ul>
<h2 id="附注"><a href="#附注" class="headerlink" title="附注"></a>附注</h2><p>激活某个套件前必须先安装该套件</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://xpenology.com/forum/topic/13289-the-new-active-backup/" target="_blank" rel="noopener">https://xpenology.com/forum/topic/13289-the-new-active-backup/</a></p>
]]></content>
      <categories>
        <category>群晖</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>群晖</tag>
      </tags>
  </entry>
  <entry>
    <title>kali菜单中各工具功能</title>
    <url>/2020/08/05/kali%E8%8F%9C%E5%8D%95%E4%B8%AD%E5%90%84%E5%B7%A5%E5%85%B7%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<p>title: kali菜单中各工具功能<br>categories: kali<br>archives: linux<br>tags: </p>
<ul>
<li>linux</li>
<li>kali</li>
</ul>
<hr>
<h2 id="一、说明"><a href="#一、说明" class="headerlink" title="一、说明"></a><strong>一、说明</strong></h2><p>各工具kali官方简介（竖排）：<a href="https://tools.kali.org/tools-listing" target="_blank" rel="noopener">https://tools.kali.org/tools-listing</a></p>
<p>安装kali虚拟机可参考：<a href="https://www.cnblogs.com/lsdb/p/6500757.html" target="_blank" rel="noopener">https://www.cnblogs.com/lsdb/p/6500757.html</a></p>
<p><code>pentestbox：</code>虚拟机还是比较耗内存的，内存不够可以试试<a href="https://pentestbox.org/zh" target="_blank" rel="noopener"><code>pentestbox</code></a>，从功能上可以理解为运行在<code>windows</code>上的<code>kali</code>发行版，<code>kali</code><a href="https://tools.pentestbox.org/" target="_blank" rel="noopener">主流工具它都具备</a>。官方下载页面似乎有点问题，可直接到其<a href="https://sourceforge.net/projects/pentestbox/files/" target="_blank" rel="noopener"><code>sourceforge</code>主页</a>下载。另外注意可能是因为<code>metasploit</code>太大默认版本没有<code>mtetasploit</code>，<code>with-metasploit</code>版本才有<code>metasploit</code>。</p>
<p>更多渗透测试资源可参考：<a href="https://github.com/enaqx/awesome-pentest" target="_blank" rel="noopener">https://github.com/enaqx/awesome-pentest</a></p>
<a id="more"></a>

<h2 id="二、kali工具列表"><a href="#二、kali工具列表" class="headerlink" title="二、kali工具列表"></a><strong>二、kali工具列表</strong></h2><p>使用模式中，cmd-line表示单条命令形式，shell表示交互shell形式，gui表示是图形界面形式。</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>类型</th>
<th>使用模式</th>
<th>功能</th>
<th>功能评价</th>
</tr>
</thead>
<tbody><tr>
<td>dmitry</td>
<td>信息收集</td>
<td></td>
<td>whois查询/子域名收集/端口扫描</td>
<td>whois并不简单明了；子域名和邮箱依赖google；端口扫描速度一般</td>
</tr>
<tr>
<td>dnmap</td>
<td>信息收集</td>
<td></td>
<td>用于组建分布式nmap，dnmap_server为服务端；dnmap_client为客户端</td>
<td>用起来并不是那么方便，不是实在不行不是很必要</td>
</tr>
<tr>
<td>ike-scan</td>
<td>信息收集</td>
<td></td>
<td>收集ipsec vpn server指纹信息</td>
<td>好像用于攻击vpn，不太懂</td>
</tr>
<tr>
<td>maltegoce</td>
<td>信息收集</td>
<td>gui</td>
<td>域名/账号等关联性收集展示</td>
<td>关联性展示功能确实很好，但效果可能没有那么理想，特别是对国内而言</td>
</tr>
<tr>
<td>netdiscover</td>
<td>信息收集</td>
<td></td>
<td>主动发出arp包和截获arp包</td>
<td>就arp探测功能就此功能本身而言做得算很好了</td>
</tr>
<tr>
<td>nmap</td>
<td>信息收集</td>
<td>cmd-line</td>
<td>端口服务探测和端口漏洞扫描</td>
<td>端口扫描集大成者</td>
</tr>
<tr>
<td>p0f</td>
<td>信息收集</td>
<td>cmd-line</td>
<td>监听网卡收发的数据包，从数据包中读取远端机器操作系统服务版本等信息</td>
<td>毕竟只是截取数据 包中的版本信息，效果期望不要很大</td>
</tr>
<tr>
<td>regon-ng</td>
<td>信息收集</td>
<td>shell</td>
<td>模仿msf的信息侦查框架</td>
<td>类似将站长工具等东西命令行化，想法挺好但是用起来感觉不是那么直观</td>
</tr>
<tr>
<td>sparta</td>
<td>暴力破解</td>
<td>gui</td>
<td>图形版的hydra，加了端口服务扫描功能</td>
<td>还行图形界面聊胜于无</td>
</tr>
<tr>
<td>zenmap</td>
<td>信息收集</td>
<td>gui</td>
<td>图形界面版的nmap</td>
<td>还行图形界面聊胜于无</td>
</tr>
<tr>
<td>golismero</td>
<td>web扫描</td>
<td>cmd-line</td>
<td>就是一个文本版的类似awvs的web扫描器</td>
<td>感觉可以提升对扫描器原理的认识</td>
</tr>
<tr>
<td>lynis</td>
<td>系统审计</td>
<td></td>
<td>感觉有点像360首页的“立即体验”，不过只是扫描告警不能一键修复</td>
<td>shell脚本写成颇为有趣</td>
</tr>
<tr>
<td>nikto</td>
<td>web扫描</td>
<td></td>
<td>中间件扫描器，扫描tomcat等中间件的错误配置、存在漏洞等</td>
<td>就喜欢这种直接告漏洞的扫描器（不过事实上很少能有可用的漏洞）</td>
</tr>
<tr>
<td>unix-privesc-check</td>
<td>系统审计</td>
<td></td>
<td>审计系统中的关键文件权限是否有异常</td>
<td>还是没有总结性展示和修复功能</td>
</tr>
<tr>
<td>bed</td>
<td>系统扫描</td>
<td></td>
<td>通过发送各种模糊数据测试多种服务的缓冲区溢出漏洞的工具</td>
<td>可能还不错</td>
</tr>
<tr>
<td>burpsuite</td>
<td>web代理</td>
<td></td>
<td>常用web代理截包工具</td>
<td>功能强大不能要求更多</td>
</tr>
<tr>
<td>commix</td>
<td>注入检测</td>
<td></td>
<td>sqlmap检测sql注入此工具检测系统命令注入</td>
<td>两相搭配那注入基本覆盖了</td>
</tr>
<tr>
<td>httrack</td>
<td>网站克隆</td>
<td></td>
<td>将网站克隆到本地</td>
<td>钓鱼乌云等可能有用</td>
</tr>
<tr>
<td>owasp-zap</td>
<td>web代理</td>
<td>gui</td>
<td>owasp组织开发的工具</td>
<td>和burpsuite相比弱化了截包功能，强化了web漏洞扫描功能，不过感觉也没扫出什么东西</td>
</tr>
<tr>
<td>paros</td>
<td>web扫描</td>
<td>gui</td>
<td>一个web爬行和漏扫工具</td>
<td>和owasp-zap差不多</td>
</tr>
<tr>
<td>skipfish</td>
<td>web扫描</td>
<td>cmd-line</td>
<td>一个全自动化的web漏洞扫描工具</td>
<td>其工作一是爬行网站页面，然后分析页面漏洞，最后生html报告</td>
</tr>
<tr>
<td>sqlmap</td>
<td>sql注入扫描</td>
<td>cmd-line</td>
<td>一个强大的sql注入扫描工具</td>
<td></td>
</tr>
<tr>
<td>w3af</td>
<td>web扫描</td>
<td>shell/gui</td>
<td>一个web漏洞扫描框架</td>
<td>所谓框架就是有一堆扫描模块，然后你选定其中一些模块去扫描网站；感觉一般没说的那么好</td>
</tr>
<tr>
<td>webscarab</td>
<td>http代理</td>
<td>gui</td>
<td>更专业的网站树型结构分析工具</td>
<td></td>
</tr>
<tr>
<td>wpscan</td>
<td>web扫描</td>
<td></td>
<td>针对wordpress的漏洞扫描工具</td>
<td></td>
</tr>
<tr>
<td>bbqsql</td>
<td>盲注扫描</td>
<td>shell</td>
<td>一个高度可配置的交互式的sql盲注工具</td>
<td></td>
</tr>
<tr>
<td>hexorbase</td>
<td>数据库管理</td>
<td>gui</td>
<td>一个支持多种数据库的客户端有多个数据库的口令破解功能</td>
<td>作为客户端只能将就着用。暴破口令需要自己准备字典</td>
</tr>
<tr>
<td>jsql</td>
<td>数据库探测</td>
<td>gui</td>
<td>根据url探测数据库类型/参数注入测试/探测后台页而/探测重要文件</td>
<td></td>
</tr>
<tr>
<td>mdb-sql</td>
<td>数据库管理</td>
<td>cmd-line</td>
<td>可用来连接access数据库文件（mdb）然后通过sql语句查询数据</td>
<td></td>
</tr>
<tr>
<td>oscaner</td>
<td>数据库猜解</td>
<td>cmd-line</td>
<td>用字典探查oracle数据库是否监听及猜解服务名</td>
<td>参数很少。测试sid和默认用户是可以的，默认的字典基本没法看还是得自己写字典</td>
</tr>
<tr>
<td>sidguesser</td>
<td>数据库猜解</td>
<td>cmd-line</td>
<td>用字典探测oracle数据库存在的sid</td>
<td>参数很少。测试验证如果字典里有sid，可以探测出sid。基于字典的工具还是得自己准备字典</td>
</tr>
<tr>
<td>sqllite database</td>
<td>数据库管理</td>
<td>gui</td>
<td>sqlite数据库客户端</td>
<td></td>
</tr>
<tr>
<td>sqlinja</td>
<td>数据库猜解</td>
<td>cmd-line</td>
<td>用于猜解ms</td>
<td>sql</td>
</tr>
<tr>
<td>sqlsus</td>
<td>sql注入检测</td>
<td>cmd-line</td>
<td>用于mysql的盲注检测</td>
<td></td>
</tr>
<tr>
<td>tnscmd10g</td>
<td>数据库探测</td>
<td>cmd-line</td>
<td>用于探测oracle是否监听及其他一些信息</td>
<td></td>
</tr>
<tr>
<td>cewl</td>
<td>口令文件制作</td>
<td>cmd-line</td>
<td>爬取给定的URL并依据限制条件截取网页中的单词生成口令集合</td>
<td>这种想法是可取的。但有点遗憾只是截取网页中的单词，没有a转@等等智能变换</td>
</tr>
<tr>
<td>crunch</td>
<td>口令文件制作</td>
<td>cmd-line</td>
<td>依据限定的条件生成口令集合</td>
<td></td>
</tr>
<tr>
<td>hashcat</td>
<td>hash爆破</td>
<td>cmd-line</td>
<td>多种hash的爆力猜解工具，速度快所耗CPU小（相对）</td>
<td></td>
</tr>
<tr>
<td>john</td>
<td>系统口令破解</td>
<td>cmd-line</td>
<td>用于对系统口令文件的破解（如/etc/passwd）还原出密码明文</td>
<td></td>
</tr>
<tr>
<td>johnny</td>
<td>系统口令破解</td>
<td>gui</td>
<td>john的gui版本</td>
<td></td>
</tr>
<tr>
<td>medusa</td>
<td>口令猜解</td>
<td>cmd-line</td>
<td>可对IMAP, rlogin, SSH等进行口令猜解，类似hydra</td>
<td></td>
</tr>
<tr>
<td>ncrack</td>
<td>口令猜解</td>
<td>cmd-line</td>
<td>可对IMAP, rlogin, SSH等进行口令猜解，类似hydra</td>
<td></td>
</tr>
<tr>
<td>ophcrack</td>
<td>系统口令破解</td>
<td>gui</td>
<td>基于彩虹表的windows口令破解工具</td>
<td></td>
</tr>
<tr>
<td>pyrit</td>
<td>wifi破解</td>
<td>cmd-line</td>
<td>WPA/WPA2加密的wifi的密码破解工具</td>
<td></td>
</tr>
<tr>
<td>rainbowcrack</td>
<td>hash破解</td>
<td>cmd-line</td>
<td>具有彩虹表的生成、排序和使用排序好换彩虹表进行破解的功能</td>
<td></td>
</tr>
<tr>
<td>rcracki_mt</td>
<td>hash破解</td>
<td>cmd-line</td>
<td>基于彩虹表的hash破解工具，可能蚲rainbowcrack一部份</td>
<td></td>
</tr>
<tr>
<td>wordlist</td>
<td>口令文件</td>
<td>cmd-line</td>
<td>打印kali自带的一些口令文件存放的位置</td>
<td></td>
</tr>
<tr>
<td>aircrack-ng</td>
<td>wifi破解</td>
<td>cmd-line</td>
<td>针对WEP、 WPA加密方式的wifi密码破解套件</td>
<td></td>
</tr>
<tr>
<td>chirp</td>
<td>无线电拦截</td>
<td>gui</td>
<td>各种无线电数据包的拦截工具（？）</td>
<td></td>
</tr>
<tr>
<td>cowpatty</td>
<td>wifi破解</td>
<td>cmd-line</td>
<td>基于已捕获握手包和密码字典的WPA-PSK加密的wifi密码的猜解</td>
<td>不能自己拦截数据包也只能破解WPA-PSK类加密方式功能有点弱</td>
</tr>
<tr>
<td>Fern WIFI Cracker</td>
<td>wifi破解</td>
<td>gui</td>
<td>基于字典的WEP和WPA加密的wifi破解工具</td>
<td>能自动发现wifi能拦截数据包，图形界面操作，简单易用</td>
</tr>
<tr>
<td>Ghost Phiser</td>
<td>AP假冒</td>
<td>gui</td>
<td>能发现AP并使与AP连接的设备断开连接然后假冒AP让设备重新连接</td>
<td>图形界面除了AP外还有假冒DNS、http服务器等，较为好用</td>
</tr>
<tr>
<td>giskismet</td>
<td>可视化</td>
<td>gui</td>
<td>Kismet输出结果的可视化工具，即较成text、html等各种格式</td>
<td></td>
</tr>
<tr>
<td>kismet</td>
<td>AP发现</td>
<td>shell</td>
<td>交互式的AP发现工具，列出周围AP的各种信息</td>
<td></td>
</tr>
<tr>
<td><a href="http://www.360doc.com/content/15/1229/16/29791812_523958566.shtml" target="_blank" rel="noopener">MDK3</a></td>
<td>AP扰乱</td>
<td>cmd-line</td>
<td>可向AP发送大量连接、断开请求，可向周围设备告知存在根本不存在的大量AP</td>
<td>这工具的攻击方法简直是发了疯</td>
</tr>
<tr>
<td>mfor</td>
<td>IC卡破解</td>
<td>cmd-line</td>
<td>IC卡密钥破解程序</td>
<td>各种免费吃饭充钱教程里用的工具你想不想学</td>
</tr>
<tr>
<td>mfterm</td>
<td>IC卡破解</td>
<td>shell</td>
<td>交互式IC卡文件写入工具</td>
<td>要修改卡内数据才是最终的IC卡破解</td>
</tr>
<tr>
<td>pixiewps</td>
<td>wifi破解</td>
<td>cmd-line</td>
<td>针对开启WPS的wifi利用WPS随机数生成中的bug来破解</td>
<td>有说很快有说成功率比较低</td>
</tr>
<tr>
<td>reaver</td>
<td>wifi破解</td>
<td>cmd-line</td>
<td>针对开启WPS的wifi进行暴力破解的工具    aircrack-ng后排名第二的wifi破解工具</td>
<td></td>
</tr>
<tr>
<td>wifite</td>
<td>wifi破解</td>
<td>cmd-line</td>
<td>较为自动化的wifi破解工具</td>
<td></td>
</tr>
<tr>
<td>apktool</td>
<td>安卓逆向</td>
<td>cmd-line</td>
<td>从apk文件中还原出xml和图版等资源文件</td>
<td></td>
</tr>
<tr>
<td>clang</td>
<td>编译器</td>
<td>cmd-line</td>
<td>类似gcc的编译器，更轻量，可编译c、c++、Objective-C</td>
<td></td>
</tr>
<tr>
<td>clang++</td>
<td>编译器</td>
<td>cmd-line</td>
<td>C++编译器，与clang的关系类似gcc和g++的类系</td>
<td></td>
</tr>
<tr>
<td>dex2jar</td>
<td>安卓逆向</td>
<td>cmd-line</td>
<td>apktool把apk还原成了资源文件和dex，dex2jar把dex还原成jar文件（.class）</td>
<td></td>
</tr>
<tr>
<td>edb-debug</td>
<td>动态调试</td>
<td>gui</td>
<td>软件逆向动态调试工具</td>
<td>Linux版Ollydbg</td>
</tr>
<tr>
<td>flashm</td>
<td>反汇编</td>
<td>cmd-line</td>
<td>.swf文件的反汇编工具可反汇编出.swf中的脚本代码</td>
<td></td>
</tr>
<tr>
<td>jad</td>
<td>反编译</td>
<td>cmd-line</td>
<td>dex2jar把文件还原成了.class，jad进一步把文件还原成.java文件</td>
<td></td>
</tr>
<tr>
<td>javasnoop    fuzz</td>
<td>gui</td>
<td>java程序漏洞评估工具</td>
<td></td>
<td></td>
</tr>
<tr>
<td>nasm shell</td>
<td>汇编    shell</td>
<td>nasm是32位汇编编译器，这是一个nasm的shell</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ollydbg</td>
<td>动态调试</td>
<td>gui</td>
<td>windows平台大名鼎鼎的动态调试工具，Linux上是通过wine运行有点水土不服</td>
<td></td>
</tr>
<tr>
<td>radare2</td>
<td>静态分析</td>
<td>cmd-line</td>
<td>类似ida的静态反汇编分析工具，功能强大，开源</td>
<td>但是命令行操作这难度有点大</td>
</tr>
<tr>
<td>armitage</td>
<td>漏洞利用</td>
<td>gui</td>
<td>measploit的gui界面</td>
<td>嗯好像是比原来的msf-gui好点，不过叫人自己去启动msf还要登录，还是不用算了</td>
</tr>
<tr>
<td>beef</td>
<td>漏洞利用</td>
<td>cmd-line</td>
<td>利用msf的exp结合xss构造有攻击性的html页面，当浏览器访问即会受到攻击并获取shell</td>
<td>这可以啊，不过不懂对现在浏览器效果怎么样</td>
</tr>
<tr>
<td>metasploit</td>
<td>漏洞利用</td>
<td>shell</td>
<td>就是启动msfconsole</td>
<td></td>
</tr>
<tr>
<td>msf payload center</td>
<td>漏洞利用</td>
<td>cmd-line</td>
<td>生成包含exp的windows/android等各平台的可执行文件，木马制作利器</td>
<td>那这东西和msfvenom的区别是什么</td>
</tr>
<tr>
<td>searchsploit</td>
<td>漏洞利用</td>
<td>cmd-line</td>
<td>用于搜索已从exploitdb下载到本地的漏洞利用脚本</td>
<td>可以理解msf都是ruby写的可执行代码，exploit不一定用ruby写，也可能只是扫描述而非代码</td>
</tr>
<tr>
<td>Social-Engineering</td>
<td>漏洞利用</td>
<td>shell</td>
<td>一般用于生成各种插入了exp的文件，诱使目标打开而中招</td>
<td>社会工程学总说得很厉害，不过我总觉得社会工程学和DDOS就是最名不副实的</td>
</tr>
<tr>
<td>termineter</td>
<td>漏洞利用</td>
<td>shell</td>
<td>智能电表攻击框架</td>
<td>这需要硬件搭配吧</td>
</tr>
<tr>
<td>bdfproxy</td>
<td>中间人攻击</td>
<td></td>
<td>处于中间人身份时可对经过的流量插入payload</td>
<td></td>
</tr>
<tr>
<td>driftnet</td>
<td>图版嗅探</td>
<td>cmd-line</td>
<td>用于嗅探流量中的图版并展示到x-window上</td>
<td>配上arp欺骗作为中间人才能发挥威力，自己拦自己的就好玩而已</td>
</tr>
<tr>
<td>ettercap</td>
<td>流量拦截</td>
<td>gui</td>
<td>听说可以截持同子网的流量，强无敌，原理是什么</td>
<td></td>
</tr>
<tr>
<td>hampster</td>
<td>代理</td>
<td>cmd-line</td>
<td>好像也是代理转发流量的</td>
<td></td>
</tr>
<tr>
<td>macchanger</td>
<td>mac欺骗</td>
<td>cmd-line</td>
<td>修改本机上网时的mac地址，一用作身份隐藏，二可用来绕过wifi mac黑名单</td>
<td>应该只是软修改mac地址不可能可写吧</td>
</tr>
<tr>
<td>mitmproxy</td>
<td>代理</td>
<td>cmd-line</td>
<td>好像也是代理转发流量的</td>
<td>感觉没什么特色啊</td>
</tr>
<tr>
<td>netsniff-ng</td>
<td>流量捕获</td>
<td>cmd-line</td>
<td>高性能的流量捕获套件，可能大流量时的捕获效果比较稳定</td>
<td></td>
</tr>
<tr>
<td>responder</td>
<td>主机嗅探</td>
<td>cmd-line</td>
<td>被动嗅探与所在主机交互的主机的操作系统版本等信息</td>
<td></td>
</tr>
<tr>
<td>wireshark</td>
<td>流量捕获</td>
<td>gui</td>
<td>拦截经过指定网卡的所有流量</td>
<td>sectools常年排行第一的工具，这就不用多说了吧</td>
</tr>
<tr>
<td>backdoor</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>exe2hex</td>
<td>编码转换</td>
<td>cmd</td>
<td>顾名思义就是把exe文件转成十六进制文件</td>
<td>不过这样的意义是什么，不是以十六进制就能打开了吗</td>
</tr>
<tr>
<td>Intersect</td>
<td>脚本生成</td>
<td>shell</td>
<td>感觉是SQL</td>
<td>有攻击性Intersect语句的生成工具</td>
</tr>
<tr>
<td>mimikatz</td>
<td>密码提取</td>
<td>cmd-line</td>
<td>用于从windows内存中提取密码</td>
<td></td>
</tr>
<tr>
<td>nishang</td>
<td>后渗透</td>
<td>cmd-line</td>
<td>基于powershell的后渗透攻击工具</td>
<td></td>
</tr>
<tr>
<td>PowerSploit</td>
<td>后渗透</td>
<td>cmd-line</td>
<td>也是一个基于powershell的后渗透攻击工具</td>
<td></td>
</tr>
<tr>
<td>proxychains</td>
<td>多重代理</td>
<td>cmd-line</td>
<td>好像用来配置多种代理的</td>
<td></td>
</tr>
<tr>
<td>weevely</td>
<td>webshell</td>
<td>shell</td>
<td>webshell连接工具不过好像要用自己生成的小马</td>
<td></td>
</tr>
<tr>
<td>autopsy</td>
<td>网页分析</td>
<td>web</td>
<td>启动一个服务通过浏览器访问使用，感觉是分析网页各种元素的不是很懂</td>
<td></td>
</tr>
<tr>
<td>binwalk</td>
<td>文件识别</td>
<td>cmd-line</td>
<td>用于分析一个文件中是否其实有多个文件</td>
<td>ctf的key文件提取就常用到的</td>
</tr>
<tr>
<td>bulk_extractor</td>
<td>要素提取</td>
<td>cmd-line</td>
<td>扫描给定的目录或文件，如果发现一些如电话号码网址等关键的信息则输出到文件</td>
<td></td>
</tr>
<tr>
<td>chkrootkit</td>
<td>系统检查</td>
<td>cmd-line</td>
<td>扫描本机，查看本机是否存在受rootkit影响的地方</td>
<td>理解成360的木马查杀也差不多</td>
</tr>
<tr>
<td>foremost</td>
<td>文件恢复</td>
<td>cmd-line</td>
<td>文件恢复工具，用于被删除的文件的恢复，就是360等的那个文件恢复功能</td>
<td></td>
</tr>
<tr>
<td>galleta</td>
<td>cookie文件</td>
<td>cmd-line</td>
<td>用于分析IE的cookie文件输出其中的有用信息</td>
<td></td>
</tr>
<tr>
<td>hashdeep</td>
<td>hash计算</td>
<td>cmd-line</td>
<td>用于计算文件hash值，支持多种散列算法</td>
<td></td>
</tr>
<tr>
<td>volafox</td>
<td>内存分析</td>
<td>cmd-line</td>
<td>针对Mac OS X的内存分析工具，可从其内存镜像中读取进程列表等各种主机信息</td>
<td>先用工具把当前内存抓取下来，然后再用来分析；内存数据容易被破坏所以这确实很有意义</td>
</tr>
<tr>
<td>volatility</td>
<td>内存分析</td>
<td>cmd-line</td>
<td>volafox的扩展，支持Mac OS X/Linux/Windows</td>
<td></td>
</tr>
<tr>
<td>casefile</td>
<td>报告编写</td>
<td>gui</td>
<td>一个画图工具，packet tracer用来画网络拓扑，这用来画场景拓扑</td>
<td>这写出高大上的报告啊</td>
</tr>
<tr>
<td>cutycapt</td>
<td>网页截屏</td>
<td>cmd-line</td>
<td>一个基于WebKit内核的网页截图工具，就是指定一个url它就能用解析url并把url界面截下来</td>
<td>各种扫描器中的截图就是使用类似的工具完成的，并不会真用个浏览器访问再截图下来</td>
</tr>
<tr>
<td>dradis</td>
<td>报告生成</td>
<td>web</td>
<td>可解析burpsuite/nmap等生成的扫描文件，并可将扫描结果转存为pdf或html</td>
<td></td>
</tr>
<tr>
<td>faraday IDE</td>
<td>报告管理</td>
<td>gui</td>
<td></td>
<td></td>
</tr>
<tr>
<td>keepnote</td>
<td>笔记本</td>
<td>gui</td>
<td>较之记事本，可建文件夹，支持富文本，可导出为其他格式</td>
<td></td>
</tr>
<tr>
<td>magictree</td>
<td>报告管理</td>
<td>gui</td>
<td></td>
<td></td>
</tr>
<tr>
<td>pipal</td>
<td>词频统计</td>
<td>cmd-line</td>
<td>说词频统计并不是很准确，文命令可分析统计给定文件中的词语的“<a href="https://www.freebuf.com/sectool/49592.html" target="_blank" rel="noopener">各种最</a>”</td>
<td></td>
</tr>
<tr>
<td>recordmydesktop</td>
<td>屏幕录制</td>
<td>cmd-line</td>
<td>屏幕录制，输出.ogv格式视频    不过感觉这视频格式占用磁盘有点大啊</td>
<td></td>
</tr>
<tr>
<td>maltegoce</td>
<td>关系分析</td>
<td>gui</td>
<td>通过网络搜索，获取某个IP或邮箱与其他IP或邮箱的拓扑关系</td>
<td>这东西有那么强，但社工的东西还是没那么强，而且还是外国的工具在天朝的网络</td>
</tr>
</tbody></table>
]]></content>
  </entry>
</search>
